on:
  workflow_call:

jobs:
  extension_compile_linux_amd64:
    name: "Compile Extension for Linux"
    runs-on: "ubuntu-24.04"
    strategy:
      fail-fast: false
      matrix:
        build_mode: [ debug, release ]
        include:
          - name: amd64
            script: ./extensions/scripts/compile_native.sh
            build_dir_base: build
          - name: aarch64
            script: ./extensions/scripts/cross_compile_linux_arm.sh
            build_dir_base: build_aarch64

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            extensions/godot-cpp
            extensions/${{ matrix.build_dir_base }}_${{ matrix.build_mode }}
          save-always: true
          key: extension_cache_linux_${{ matrix.name }}_${{ matrix.build_mode }}_4_3_0_beta1

      - name: get submodules if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: git submodule update --init --recursive

      - name: Compile the extension
        run: ${{ matrix.script }} ${{ matrix.build_mode }}

      - name: Upload extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension_linux_${{ matrix.name }}_${{ matrix.build_mode }}
          path: bin

  combine_extension_binaries:
    name: "Combine Extension Binaries"
    runs-on: "ubuntu-24.04"
    needs: extension_compile_linux_amd64
    steps:
      - name: Retreive extension artifacts (release amd64)
        uses: actions/download-artifact@v4
        with:
          name: extension_linux_amd64_release
          path: bin
      
      - name: Retreive extension artifacts (release aarch64)
        uses: actions/download-artifact@v4
        with:
          name: extension_linux_aarch64_release
          path: bin

      - name: Retreive extension artifacts (debug amd64)
        uses: actions/download-artifact@v4
        with:
          name: extension_linux_amd64_debug
          path: bin

      - name: Retreive extension artifacts (debug aarch64)
        uses: actions/download-artifact@v4
        with:
          name: extension_linux_aarch64_debug
          path: bin

      - name: Publish extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension_linux
          path: bin

  export_game_linux_amd64:
    name: "Export for Linux amd64"
    runs-on: "ubuntu-24.04"
    needs: combine_extension_binaries
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache
        with:
          path: godot
          enableCrossOsArchive: true
          fail-on-cache-miss: true
          key: godot_4_2_2_stable_rev2

      - name: Retreive extension artifacts
        uses: actions/download-artifact@v4
        with:
          name: extension_linux
          path: bin

      - name: Create templates symlink
        run: |
          mkdir -p ~/.local/share/godot/export_templates
          ln -s $(pwd)/godot/export_templates/4.2.2.stable ~/.local/share/godot/export_templates/4.2.2.stable

      - name: Create the build directory
        run: mkdir build

      - name: Export Client For Linux amd64
        run: ./godot/godot_linux --headless --export-release 'Client Linux/X11 amd64' project.godot

      - name: Export Server For Linux amd64
        run: ./godot/godot_linux --headless --export-release 'Server Linux/X11 amd64' project.godot

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux_builds_amd64
          path: build
